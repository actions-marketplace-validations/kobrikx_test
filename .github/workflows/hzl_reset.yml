name: "HZL Reset"
defaults:
  run:
    shell: bash
env:
  EXTERNAL_REPO_URL: git@github.com:kobrikx/homebrew-testize.git
  EXTERNAL_REPO_NAME: kobrikx/homebrew-testize
  ENV_BRANCHES: |
    {["main", "feature/test"]}
#   MATRIX
  EXTERNAL_REPO_GIT_USER_EMAIL: dmitry@hazelops.com
  EXTERNAL_REPO_GIT_USER_NAME: AutomationD

on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Branch Name
        options:
          - main
          - feature/test
        required: true
        default: main

jobs:
  hzl-sync:
    runs-on: ubuntu-latest
    env:
      TAG: "${{ github.sha }}"
      ENV: ${{ github.event.inputs.env }}
#      ENV_BRANCH: ${{ fromJSON(env.ENV_BRANCHES)}}  -  убираем из env в матрицу (ПОЧИТАТЬ про эту конструкцию)
    steps:
      - name: Compute name of remote branch
        run: |
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
          EXTERNAL_REF=$(echo "$GIT_BRANCH" | sed 's/\ext-//g')
          echo "EXTERNAL_REF=$EXTERNAL_REF" >> $GITHUB_ENV
          echo "$GIT_BRANCH"
          echo "$EXTERNAL_REF"
          echo "$GITHUB_REF"

      - name: Clone internal repo
        uses: actions/checkout@v2
        with:
#          path: internal
          ref: ${{ env.GITHUB_REF }}

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa # optional
          known_hosts: unnecessary
      - name: Pull changes to internal repo
        run: |
          git remote add external git@github.com:${{ env.EXTERNAL_REPO_URL }}.git
          git remote -v
          git checkout ${{ env.GIT_BRANCH}}       #(checkout local branch)
          git reset --hard external ${{ env.GIT_BRANCH}}
#          git
#          Запушить отсюда надо в мой github (c помощью GHA или вручную используя github token)
#
#          Выборка по списку - матрицей или в баше по очереди?
#          Матрицу можно сделать.
#
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

#          git remote -v
#          # git reset --hard origin/${{ env.EXTERNAL_REF }}
#          git add .
#          git config --global user.email ${{ env.EXTERNAL_REPO_GIT_USER_EMAIL }}
#          git config --global user.name ${{ env.EXTERNAL_REPO_GIT_USER_NAME }}
#          git commit -m "${{ fromJSON(steps.get_pull_request_body.outputs.result)['data']['body'] }}"
#          git push --set-upstream origin ${{ env.EXTERNAL_REF }}
#
# strategy:
#       matrix:
#         go-version: [1.16.x]
#         os: [ubuntu-latest, macos-latest, windows-latest]
#     runs-on: ${{ matrix.os }}
#     steps:
#     - name: Install Go
#       uses: actions/setup-go@v2
#       with:
#         go-version: ${{ matrix.go-version }}